apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: flask-destination-rule
  namespace: default
spec:
  host: flask-security-service.default.svc.cluster.local
  trafficPolicy:
    # 1) LOAD-BALANCER
    loadBalancer:
      simple: ROUND_ROBIN

    # 2) CIRCUIT-BREAKER / OUTLIER DETECTION
    outlierDetection:
      # if a single upstream endpoint returns >= 5 consecutive 5xx errors, eject it
      consecutive5xxErrors: 5
      # check every 10s
      interval: 10s
      # eject it for 30s
      baseEjectionTime: 30s
      # at most 50% of your endpoints may be ejected at once
      maxEjectionPercent: 50

    # 3) CONNECTION POOL SETTINGS (per‚Äêhost limits)
    connectionPool:
      http:
        # no more than 100 concurrent requests per upstream host
        http1MaxPendingRequests: 100
        # no more than 50 active requests per host
        http2MaxRequests: 50
        # no more than 1,000 requests per connection (then Envoy will open a fresh one)
        maxRequestsPerConnection: 1000
      tcp:
        # no more than 10 simultaneous TCP connections per host
        maxConnections: 10
        # time to wait when establishing a new TCP connection
        connectTimeout: 30ms
